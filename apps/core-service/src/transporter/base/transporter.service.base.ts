/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Transporter } from "@prisma/client";

export class TransporterServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.TransporterCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.TransporterCountArgs>
  ): Promise<number> {
    return this.prisma.transporter.count(args);
  }

  async transporters<T extends Prisma.TransporterFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.TransporterFindManyArgs>
  ): Promise<Transporter[]> {
    return this.prisma.transporter.findMany(args);
  }
  async transporter<T extends Prisma.TransporterFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.TransporterFindUniqueArgs>
  ): Promise<Transporter | null> {
    return this.prisma.transporter.findUnique(args);
  }
  async createTransporter<T extends Prisma.TransporterCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.TransporterCreateArgs>
  ): Promise<Transporter> {
    return this.prisma.transporter.create<T>(args);
  }
  async updateTransporter<T extends Prisma.TransporterUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.TransporterUpdateArgs>
  ): Promise<Transporter> {
    return this.prisma.transporter.update<T>(args);
  }
  async deleteTransporter<T extends Prisma.TransporterDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.TransporterDeleteArgs>
  ): Promise<Transporter> {
    return this.prisma.transporter.delete(args);
  }
}
